{"ast":null,"code":"var _jsxFileName = \"/Users/mycroftni/Desktop/Index/\\u4E2A\\u4EBA\\u535A\\u5BA2\\u7CFB\\u7EDF/blog-system/src/components/PostList.tsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Chip, Avatar } from '@mui/material';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'grid',\n      gridTemplateColumns: {\n        xs: '1fr',\n        sm: '1fr 1fr'\n      },\n      gap: 4,\n      mt: 4\n    },\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'rgba(26, 26, 26, 0.8)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(0, 245, 255, 0.1)',\n        transition: 'transform 0.3s, box-shadow 0.3s',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: '0 8px 24px rgba(0, 245, 255, 0.15)'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flexGrow: 1,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: `https://i.pravatar.cc/150?img=${post.id}`,\n            sx: {\n              width: 40,\n              height: 40,\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                color: 'text.primary',\n                fontWeight: 600,\n                fontSize: '1.1rem'\n              },\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: 'text.secondary',\n                fontSize: '0.8rem'\n              },\n              children: format(new Date(post.createdAt), 'MMM d, yyyy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2,\n            color: 'primary.main',\n            fontWeight: 600,\n            fontSize: '1.4rem',\n            lineHeight: 1.3\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 3,\n            color: 'text.secondary',\n            fontSize: '1rem',\n            lineHeight: 1.6\n          },\n          children: [post.content.substring(0, 150), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 1\n          },\n          children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n            label: tag,\n            size: \"small\",\n            sx: {\n              backgroundColor: 'rgba(0, 245, 255, 0.1)',\n              color: 'primary.main',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 245, 255, 0.2)'\n              }\n            }\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Chip","Avatar","format","jsxDEV","_jsxDEV","PostList","posts","sx","display","gridTemplateColumns","xs","sm","gap","mt","children","map","post","height","flexDirection","backgroundColor","backdropFilter","border","transition","transform","boxShadow","flexGrow","p","alignItems","mb","src","id","width","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","fontWeight","fontSize","author","Date","createdAt","lineHeight","title","content","substring","flexWrap","tags","tag","label","size","_c","$RefreshReg$"],"sources":["/Users/mycroftni/Desktop/Index/个人博客系统/blog-system/src/components/PostList.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, Chip, Avatar } from '@mui/material';\nimport { Post } from '../types';\nimport { format } from 'date-fns';\n\ninterface PostListProps {\n  posts: Post[];\n}\n\nconst PostList: React.FC<PostListProps> = ({ posts }) => {\n  return (\n    <Box sx={{ \n      display: 'grid', \n      gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr' },\n      gap: 4,\n      mt: 4\n    }}>\n      {posts.map((post) => (\n        <Card \n          key={post.id} \n          sx={{ \n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: 'rgba(26, 26, 26, 0.8)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(0, 245, 255, 0.1)',\n            transition: 'transform 0.3s, box-shadow 0.3s',\n            '&:hover': {\n              transform: 'translateY(-4px)',\n              boxShadow: '0 8px 24px rgba(0, 245, 255, 0.15)',\n            }\n          }}\n        >\n          <CardContent sx={{ flexGrow: 1, p: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <Avatar \n                src={`https://i.pravatar.cc/150?img=${post.id}`} \n                sx={{ width: 40, height: 40, mr: 2 }}\n              />\n              <Box>\n                <Typography \n                  variant=\"subtitle1\" \n                  sx={{ \n                    color: 'text.primary',\n                    fontWeight: 600,\n                    fontSize: '1.1rem'\n                  }}\n                >\n                  {post.author}\n                </Typography>\n                <Typography \n                  variant=\"caption\" \n                  sx={{ \n                    color: 'text.secondary',\n                    fontSize: '0.8rem'\n                  }}\n                >\n                  {format(new Date(post.createdAt), 'MMM d, yyyy')}\n                </Typography>\n              </Box>\n            </Box>\n            <Typography \n              variant=\"h6\" \n              sx={{ \n                mb: 2,\n                color: 'primary.main',\n                fontWeight: 600,\n                fontSize: '1.4rem',\n                lineHeight: 1.3\n              }}\n            >\n              {post.title}\n            </Typography>\n            <Typography \n              variant=\"body1\" \n              sx={{ \n                mb: 3,\n                color: 'text.secondary',\n                fontSize: '1rem',\n                lineHeight: 1.6\n              }}\n            >\n              {post.content.substring(0, 150)}...\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n              {post.tags.map((tag) => (\n                <Chip\n                  key={tag}\n                  label={tag}\n                  size=\"small\"\n                  sx={{\n                    backgroundColor: 'rgba(0, 245, 255, 0.1)',\n                    color: 'primary.main',\n                    '&:hover': {\n                      backgroundColor: 'rgba(0, 245, 255, 0.2)',\n                    }\n                  }}\n                />\n              ))}\n            </Box>\n          </CardContent>\n        </Card>\n      ))}\n    </Box>\n  );\n};\n\nexport default PostList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}