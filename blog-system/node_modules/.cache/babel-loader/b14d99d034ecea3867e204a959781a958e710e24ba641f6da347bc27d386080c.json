{"ast":null,"code":"var _jsxFileName = \"/Users/mycroftni/Desktop/Index/\\u4E2A\\u4EBA\\u535A\\u5BA2\\u7CFB\\u7EDF/blog-system/src/components/PostList.tsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Chip, Box, Avatar, Stack } from '@mui/material';\nimport { format } from 'date-fns';\nimport { enUS } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 3\n    },\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              width: 40,\n              height: 40,\n              bgcolor: 'primary.main'\n            },\n            children: post.author[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              fontWeight: 600,\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              children: format(new Date(post.createdAt), 'PPP', {\n                locale: enUS\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          sx: {\n            mb: 2,\n            fontWeight: 600,\n            color: 'text.primary',\n            '&:hover': {\n              color: 'primary.main'\n            }\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap'\n          },\n          children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n            label: tag,\n            size: \"small\",\n            sx: {\n              '&:hover': {\n                backgroundColor: 'primary.main',\n                color: 'white'\n              }\n            }\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            color: 'text.secondary',\n            lineHeight: 1.8,\n            mb: 2\n          },\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Chip","Box","Avatar","Stack","format","enUS","jsxDEV","_jsxDEV","PostList","posts","sx","display","flexDirection","gap","children","map","post","direction","spacing","alignItems","mb","width","height","bgcolor","author","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","color","Date","createdAt","locale","component","title","flexWrap","tags","tag","label","size","backgroundColor","lineHeight","content","id","_c","$RefreshReg$"],"sources":["/Users/mycroftni/Desktop/Index/个人博客系统/blog-system/src/components/PostList.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  Card, \n  CardContent, \n  Typography, \n  Chip, \n  Box, \n  Avatar, \n  Stack\n} from '@mui/material';\nimport { Post } from '../types';\nimport { format } from 'date-fns';\nimport { enUS } from 'date-fns/locale';\n\ninterface PostListProps {\n  posts: Post[];\n}\n\nconst PostList: React.FC<PostListProps> = ({ posts }) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n      {posts.map((post) => (\n        <Card key={post.id}>\n          <CardContent>\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\n              <Avatar \n                sx={{ \n                  width: 40, \n                  height: 40,\n                  bgcolor: 'primary.main',\n                }}\n              >\n                {post.author[0]}\n              </Avatar>\n              <Box>\n                <Typography variant=\"subtitle1\" fontWeight={600}>\n                  {post.author}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {format(new Date(post.createdAt), 'PPP', { locale: enUS })}\n                </Typography>\n              </Box>\n            </Stack>\n            \n            <Typography \n              variant=\"h5\" \n              component=\"div\" \n              sx={{ \n                mb: 2,\n                fontWeight: 600,\n                color: 'text.primary',\n                '&:hover': {\n                  color: 'primary.main',\n                },\n              }}\n            >\n              {post.title}\n            </Typography>\n            \n            <Box sx={{ mb: 2, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n              {post.tags.map((tag) => (\n                <Chip \n                  key={tag} \n                  label={tag} \n                  size=\"small\"\n                  sx={{\n                    '&:hover': {\n                      backgroundColor: 'primary.main',\n                      color: 'white',\n                    },\n                  }}\n                />\n              ))}\n            </Box>\n            \n            <Typography \n              variant=\"body1\" \n              sx={{ \n                color: 'text.secondary',\n                lineHeight: 1.8,\n                mb: 2,\n              }}\n            >\n              {post.content}\n            </Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </Box>\n  );\n};\n\nexport default PostList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}